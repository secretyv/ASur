# -*- coding: utf-8 -*-

# This is an automatically generated file.
# Manual changes will be merged and conflicts marqued!
#
# Generated by py2pxd_ version 0.0.2 on 2016-11-30 15:42:28

import cython
cimport datetime

cpdef long         nint            (double d)

cdef class FixedOffset(datetime.tzinfo):
    cdef public unicode      __name
    cdef public datetime.timedelta __offset
    #
    cpdef datetime.timedelta utcoffset       (FixedOffset self, datetime.datetime dt)
    cpdef unicode      tzname          (FixedOffset self, datetime.datetime dt)
    cpdef long         dst             (FixedOffset self, datetime.datetime dt)

cdef class DataReaderMPO(object):
    cdef public long         station
    cdef public datetime.tzinfo tzinfo
    cdef public long         year
    #
    @cython.locals (i = long, url = unicode, y = long)
    cpdef unicode      __buildURL      (DataReaderMPO self)
    @cython.locals (l = unicode)
    cpdef              __skipToLine    (DataReaderMPO self, object f, unicode tgt)
    @cython.locals (d = unicode, dd = long, h = unicode, hh = list, lcl_dt = datetime.datetime, t = unicode, utc_dt = datetime.datetime, wl = double, yy = long)
    cpdef TideRecord   __decodeRecord  (DataReaderMPO self, unicode m, unicode l1, unicode l2, unicode l3)
    @cython.locals (eob = bint, l = unicode, l1 = unicode, l2 = unicode, l3 = unicode, m = long, r = TideRecord, records = list)
    cpdef list         __readData      (DataReaderMPO self, object f)
    @cython.locals (br = object, r = object)
    cpdef object       __open          (DataReaderMPO self, unicode url)
    @cython.locals (br = object, p = object, url = unicode)
    cpdef list         read            (DataReaderMPO self)

cdef class TideRecord(object):
    cdef public datetime.datetime dt
    cdef public double       wl
    #
    cpdef unicode      dump            (TideRecord self)
    @cython.locals (dt = unicode, wl = unicode)
    cpdef              load            (TideRecord self, unicode l)

cdef class TideTable(object):
    #cdef public double       DELTA_NRMTD
    #cdef public long         NPNTS_HW_LW
    #cdef public long         NPNTS_LW_HW
    cdef public list         tbl
    #
    @cython.locals (f = object, fname = unicode, r = TideRecord)
    cpdef              dump            (TideTable self, unicode dataDir)
    @cython.locals (f = object, fname = unicode, l = unicode, r = TideRecord)
    cpdef              load            (TideTable self, unicode dataDir)
    cpdef              append          (TideTable self, TideRecord r)
    cpdef              extend          (TideTable self, list t)
    cpdef              sort            (TideTable self)
    @cython.locals (res = list, t_actu = datetime.datetime)
    cpdef list         getTideSignal   (TideTable self, datetime.datetime t_start, datetime.datetime t_end, datetime.timedelta dt)
    @cython.locals (a = double, h = double, i = long, r0 = TideRecord, r1 = TideRecord)
    cpdef TideRecord   getWL           (TideTable self, datetime.datetime dt)
    @cython.locals (i = long)
    cpdef TideRecord   getPreviousHW   (TideTable self, datetime.datetime dt)
    @cython.locals (i = long)
    cpdef TideRecord   getPreviousLW   (TideTable self, datetime.datetime dt)
    @cython.locals (i = long)
    cpdef TideRecord   getNextHW       (TideTable self, datetime.datetime dt)
    @cython.locals (i = long)
    cpdef TideRecord   getNextLW       (TideTable self, datetime.datetime dt)
    cpdef double       getNormalizedTime(TideTable self, datetime.datetime dt)
    @cython.locals (doDebug = bint, dt2hw = double, dt2lw = double, hw0 = TideRecord, hw1 = TideRecord, hw2lw = double, inrm_tim = long, lw = TideRecord, lw2hw = double, nstp_dt2lw = long, nstp_hw2lw = long, stp_hw2lw = double, stp_lw2hw = double)
    cpdef long         getNormalizedTimeIndex(TideTable self, datetime.datetime dt)

@cython.locals (r = DataReaderMPO, r0 = TideRecord, r1 = TideRecord, tide_tbl = TideTable, y = long)
cpdef object       downloadTables  ()

@cython.locals (tide_tbl = TideTable)
cpdef object       loadTable       ()

